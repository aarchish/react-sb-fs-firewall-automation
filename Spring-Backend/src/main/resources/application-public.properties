logging.level.com.csx.firewall_automation=info
server.port={server_port}
spring.datasource.url=${db_url}
spiing.datasource.username=${db_username}
spring.datasource.password=${db_password}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
# Okta OAuth 2.0 Configuration
okta.oauth2.issuer=${okta.oauth2.issuer}
okta.oauth2.client-id=${okta.oauth2.client-id}
okta.oauth2.client-secret=${okta.oauth2.client-secret}
# Resource server settings for JWT validation
spring.security.oauth2.resourceserver.jwt.issuer-uri=${okta.oauth2.issuer}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${okta.oauth2.issuer}/v1/keys
postgresql=//dpg-cu7pn83v2p9s73bifnc0-a/firewall_automation