spring.application.name=firewall-automation
spring.config.import=optional:file:.env[.properties]
# Spring Profiles
spring.profiles.active=${project_environment:local}
# Server Port
server.port=${SERVER_PORT}
# database configuration
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
# Okta OAuth 2.0 Configuration
okta.oauth2.issuer=${OKTA_ISSUER}
okta.oauth2.client-id=${OKTA_CLIENT_ID}
okta.oauth2.client-secret=${OKTA_CLIENT_SECRET}
# Resource server settings for JWT validation
spring.security.oauth2.resourceserver.jwt.issuer-uri=${OKTA_ISSUER}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${OKTA_ISSUER}/v1/keys
# Specify the expected audience for tokens
# CORS allowed origins
cors.allowed.origins=${CORS_ALLOWED_ORIGINS}
# Azure AD Authentication
spring.cloud.azure.storage.blob.account-name=${AZURE_STORAGE_ACCOUNT_NAME}
spring.cloud.azure.storage.blob.container-name=${AZURE_STORAGE_CONTAINER_NAME}
spring.cloud.azure.credential.client-id=${AZURE_CLIENT_ID}
spring.cloud.azure.credential.client-secret=${AZURE_CLIENT_SECRET}
spring.cloud.azure.profile.tenant-id=${AZURE_TENANT_ID}
spring.cloud.azure.profile.subscription-id=${AZURE_SUBSCRIPTION_ID}
spring.servlet.multipart.enabled=true