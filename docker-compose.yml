version: '3.8'

services:
  postgres:
    build: ./Postgres-DB
    container_name: postgres
    environment:
      POSTGRES_DB: firewall_automation
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  spring-backend:
    build: ./Spring-Backend
    container_name: spring-backend
    environment:
      PROJECT_ENVIRONMENT: ${PROJECT_ENVIRONMENT}
      SERVER_PORT: ${SERVER_PORT}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      OKTA_ISSUER: ${OKTA_ISSUER}
      OKTA_CLIENT_ID: ${OKTA_CLIENT_ID}
      OKTA_CLIENT_SECRET: ${OKTA_CLIENT_SECRET}
      AZURE_STORAGE_ACCOUNT_NAME: ${AZURE_STORAGE_ACCOUNT_NAME}
      AZURE_STORAGE_CONTAINER_NAME: ${AZURE_STORAGE_CONTAINER_NAME}
      AZURE_CLIENT_ID: ${AZURE_CLIENT_ID}
      AZURE_CLIENT_SECRET: ${AZURE_CLIENT_SECRET}
      AZURE_TENANT_ID: ${AZURE_TENANT_ID}
      AZURE_SUBSCRIPTION_ID: ${AZURE_SUBSCRIPTION_ID}
      FIREWALL_USERNAME: ${FIREWALL_USERNAME}
      FIREWALL_PASSWORD: ${FIREWALL_PASSWORD}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
    ports:
      - "8080:8080"
    depends_on:
      - postgres

  react-frontend:
    build: ./React-Frontend
    container_name: react-frontend
    environment:
      REACT_APP_API_URL: ${VITE_API_BASE_URL}
      REACT_APP_OKTA_ISSUER: ${VITE_OKTA_ISSUER}
      REACT_APP_OKTA_CLIENT_ID: ${VITE_OKTA_CLIENT_ID}
    ports:
      - "80:80"
    depends_on:
      - spring-backend

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    environment:
      - VM_PUBLIC_IP=${{ vars.AZURE_VM_IP }}
      - SSL_CERT=${{ vars.SSL_CERT }}
      - SSL_KEY=${{ secrets.SSL_KEY }}
    depends_on:
      - react-frontend

volumes:
  postgres_data: