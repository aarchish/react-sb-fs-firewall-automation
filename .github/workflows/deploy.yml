name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: 'Set up latest Oracle JDK 23'
      uses: oracle-actions/setup-java@v1
      with:
        website: oracle.com
        release: 23

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '22'

    - name: Build Spring Boot Backend
      run: |
        cd Spring-Backend
        mvn clean package -Dmaven.skip.tests=true -Ppublic

    - name: Build React Frontend
      run: |
        cd React-Frontend
        npm install
        npm run build

    - name: Debug SSH Key
      run: |
        echo "${{ secrets.AZURE_VM_SSH_KEY }}" | wc -l

    - name: Decode and Set Up SSH Key
      run: |
        echo "${{ secrets.AZURE_VM_SSH_KEY }}" | base64 -d > private_key.pem
        chmod 600 private_key.pem

    - name: Set up Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: SSH into Azure VM and Deploy
      env:
        VM_USER: ${{ secrets.AZURE_VM_USERNAME }}
        VM_HOST: ${{ secrets.AZURE_VM_IP }}
      run: |
        ssh -o StrictHostKeyChecking=no -i private_key.pem "$VM_USER@$VM_HOST" "echo 'Connected successfully!'"
        ssh -o StrictHostKeyChecking=no -i private_key.pem "$VM_USER@$VM_HOST" << 'EOF'
          git pull
          docker-compose down
          docker-compose up -d --build
        EOF
